/*
課題番号　：L26-DeluxeSpecial1
内容　　　：int型配列（要素数２）の先頭アドレスを受取り、受取ったアドレスから始まる領域に１を加えて
　　　　　　表示する。
　　　　　　１を加えるには、インクリメント演算子を使う。
　　　　　　main関数のみで行う。
ファイル名：L26-DX1.cpp
作成日　　：2016/1/28
作成者　　：BayaSea
*/

//プログラムを書き換えて確認すること：
//□①②と③のポインタを使ったインクリメント演算子（++）を前置した場合と後置にした場合の書き方
//　（++を前につけるか、後ろにつけるか）の表示結果と比較して、インクリメント演算子とポインタ
//　の演算子結合規則を確認しなさい。
//A.確認しました。　

#include <conio.h>
#include <iostream>
using namespace std;

int main()
{
	int num[2] = { 100, 200 };
	int* p;

	//①-------------------------------------------
	p = num;

	//*pの領域（num[0]）を＋１
	cout << "++*p =" << ++*p << endl;

	//②-------------------------------------------
	num[0] = 100;	//確認のための再初期化
	p = num;

	//p（配列の先頭アドレス＝&num[0]）を＋１（4バイト）した
	p++;

	//アドレス（&num[1]）から始まる領域（num[1]）の内容
	cout << "*p++ =" << *p++ << endl;

	//③-------------------------------------------
	num[0] = 100;	//確認のための再初期化
	p = num;

	//()で括れば、*pの領域（num）を＋１
	(*p)++;
	cout << "(*p)++=" << *p << endl;


	_getch();
	return 0;
}

